#!/bin/bash

source .env

# Along with main .env file, a .env inside WordPress folder ($APP_SRC) will be used
TARGET_ENV="${APP_SRC}/.env"

# Copy configuration from templates
rm -f ${APP_SRC}/.env
cp .docker/wordpress/.env.example ${APP_SRC}/.env
cp .docker/wordpress/composer.json ${APP_SRC}/
cp .docker/wordpress/wp-config.php ${APP_SRC}/

# Database connection parameters: read them from main .env file and write
# them into WordPress .env file
ENV_FILE=$(<$TARGET_ENV)

ENV_FILE=${ENV_FILE//DATABASE_NAME=/DATABASE_NAME=\"$MYSQL_DATABASE\"}
ENV_FILE=${ENV_FILE//DATABASE_USER=/DATABASE_USER=\"$MYSQL_USER\"}
ENV_FILE=${ENV_FILE//DATABASE_PASSWORD=/DATABASE_PASSWORD=\"$MYSQL_PASSWORD\"}
ENV_FILE=${ENV_FILE//DATABASE_HOST=/DATABASE_HOST=\"database\"}
echo "$ENV_FILE" > $TARGET_ENV

# Grab random security keys and salts from WordPress.org
SALTS=$(curl -s https://api.wordpress.org/secret-key/1.1/salt/)
# Given security keys and salts, "normalize" them to be stored into the .env file.
# wp-config.php will use these values reading .env file inside WordPress folder
while read -r SALT; do
  SALT=${SALT/define(\'/}
  SALT=${SALT/\');/\"}
  SALT=${SALT/,/=\"}
  SALT=${SALT//[\' ]/}
  echo $SALT >> $TARGET_ENV
done <<< "$SALTS"

CURRENT_DIR=$(pwd)
# Install vlucas/phpdotenv via Composer
cd $APP_SRC && composer install
cd $CURRENT_DIR

# Install WordPress
docker-compose run php-fpm bash -c "export WP_CLI_CACHE_DIR=/dev/null && wp --allow-root core install \\
  --url=${APP_HOST} --title=\"${WP_SITE_TITLE}\" --admin_user=${WP_ADMIN_USER} \\
  --admin_email=${WP_ADMIN_EMAIL} --admin_password=\"${WP_ADMIN_PASSWORD}\" --skip-email"

echo -e "\n\nVisit:"
echo "- http://${APP_HOST}"
echo "- http://${APP_HOST}/wp-admin   (login with '${WP_ADMIN_USER}' user)"
echo -e "\nEnjoy!\n\n"
exit 0